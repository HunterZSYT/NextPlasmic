// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: d8kCMg1X6mbsfVAwxYN8FR
// Component: Om6OOLFVdEE_

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import {
  executePlasmicDataOp,
  usePlasmicDataOp,
  usePlasmicInvalidate
} from "@plasmicapp/react-web/lib/data-sources";

import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_library_tailwind_3_4_colors_css from "../library_tailwind_3_4_color_tokens/plasmic.module.css"; // plasmic-import: 5ZtnypMovRHeeP3YTdPCYL/projectcss
import plasmic_library_tailwind_3_4_number_tokens_css from "../library_tailwind_3_4_number_tokens/plasmic.module.css"; // plasmic-import: 4vjRXvnb4XuY6J15w9oRcQ/projectcss
import projectcss from "../blank_website/plasmic.module.css"; // plasmic-import: d8kCMg1X6mbsfVAwxYN8FR/projectcss
import sty from "./PlasmicTableFigma.module.css"; // plasmic-import: Om6OOLFVdEE_/css

import ArrowDownwardFilledIcon from "./icons/PlasmicIcon__ArrowDownwardFilled"; // plasmic-import: 826qKKi-fq1F/icon
import ArrowDropDownFilledIcon from "./icons/PlasmicIcon__ArrowDropDownFilled"; // plasmic-import: Zxu_aMq0XGa9/icon
import ChevronLeftFilledIcon from "./icons/PlasmicIcon__ChevronLeftFilled"; // plasmic-import: 1_tPXlqUP1BF/icon
import ChevronRightFilledIcon from "./icons/PlasmicIcon__ChevronRightFilled"; // plasmic-import: 78M-0AMDAqoz/icon

createPlasmicElementProxy;

export type PlasmicTableFigma__VariantMembers = {};
export type PlasmicTableFigma__VariantsArgs = {};
type VariantPropType = keyof PlasmicTableFigma__VariantsArgs;
export const PlasmicTableFigma__VariantProps = new Array<VariantPropType>();

export type PlasmicTableFigma__ArgsType = {};
type ArgPropType = keyof PlasmicTableFigma__ArgsType;
export const PlasmicTableFigma__ArgProps = new Array<ArgPropType>();

export type PlasmicTableFigma__OverridesType = {
  table?: Flex__<"div">;
  freeBox?: Flex__<"div">;
  tableHeadRow?: Flex__<"header">;
  tableHead?: Flex__<"div">;
  mask?: Flex__<"div">;
  mask2?: Flex__<"div">;
  tableHead2?: Flex__<"div">;
  mask3?: Flex__<"div">;
  mask4?: Flex__<"div">;
  tableHead3?: Flex__<"div">;
  mask5?: Flex__<"div">;
  mask6?: Flex__<"div">;
  tableHead4?: Flex__<"div">;
  mask7?: Flex__<"div">;
  mask8?: Flex__<"div">;
  tableHead5?: Flex__<"div">;
  mask9?: Flex__<"div">;
  mask10?: Flex__<"div">;
  row1?: Flex__<"div">;
  cell1?: Flex__<"div">;
  box?: Flex__<"div">;
  typography?: Flex__<"div">;
  body2?: Flex__<"div">;
  typography2?: Flex__<"div">;
  body22?: Flex__<"div">;
  cell2?: Flex__<"div">;
  box2?: Flex__<"div">;
  typography3?: Flex__<"div">;
  body23?: Flex__<"div">;
  typography4?: Flex__<"div">;
  body24?: Flex__<"div">;
  cell3?: Flex__<"div">;
  box3?: Flex__<"div">;
  typography5?: Flex__<"div">;
  body25?: Flex__<"div">;
  typography6?: Flex__<"div">;
  body26?: Flex__<"div">;
  cell4?: Flex__<"div">;
  box4?: Flex__<"div">;
  typography7?: Flex__<"div">;
  body27?: Flex__<"div">;
  typography8?: Flex__<"div">;
  body28?: Flex__<"div">;
  cell5?: Flex__<"div">;
  box5?: Flex__<"div">;
  typography9?: Flex__<"div">;
  body29?: Flex__<"div">;
  typography10?: Flex__<"div">;
  body210?: Flex__<"div">;
  row2?: Flex__<"div">;
  cell12?: Flex__<"div">;
  box6?: Flex__<"div">;
  typography11?: Flex__<"div">;
  body211?: Flex__<"div">;
  typography12?: Flex__<"div">;
  body212?: Flex__<"div">;
  cell22?: Flex__<"div">;
  box7?: Flex__<"div">;
  typography13?: Flex__<"div">;
  body213?: Flex__<"div">;
  typography14?: Flex__<"div">;
  body214?: Flex__<"div">;
  cell32?: Flex__<"div">;
  box8?: Flex__<"div">;
  typography15?: Flex__<"div">;
  body215?: Flex__<"div">;
  typography16?: Flex__<"div">;
  body216?: Flex__<"div">;
  cell42?: Flex__<"div">;
  box9?: Flex__<"div">;
  typography17?: Flex__<"div">;
  body217?: Flex__<"div">;
  typography18?: Flex__<"div">;
  body218?: Flex__<"div">;
  cell52?: Flex__<"div">;
  box10?: Flex__<"div">;
  typography19?: Flex__<"div">;
  body219?: Flex__<"div">;
  typography20?: Flex__<"div">;
  body220?: Flex__<"div">;
  row3?: Flex__<"div">;
  cell13?: Flex__<"div">;
  box11?: Flex__<"div">;
  typography21?: Flex__<"div">;
  body221?: Flex__<"div">;
  typography22?: Flex__<"div">;
  body222?: Flex__<"div">;
  cell23?: Flex__<"div">;
  box12?: Flex__<"div">;
  typography23?: Flex__<"div">;
  body223?: Flex__<"div">;
  typography24?: Flex__<"div">;
  body224?: Flex__<"div">;
  cell33?: Flex__<"div">;
  box13?: Flex__<"div">;
  typography25?: Flex__<"div">;
  body225?: Flex__<"div">;
  typography26?: Flex__<"div">;
  body226?: Flex__<"div">;
  cell43?: Flex__<"div">;
  box14?: Flex__<"div">;
  typography27?: Flex__<"div">;
  body227?: Flex__<"div">;
  typography28?: Flex__<"div">;
  body228?: Flex__<"div">;
  cell53?: Flex__<"div">;
  box15?: Flex__<"div">;
  typography29?: Flex__<"div">;
  body229?: Flex__<"div">;
  typography30?: Flex__<"div">;
  body230?: Flex__<"div">;
  row4?: Flex__<"div">;
  cell14?: Flex__<"div">;
  box16?: Flex__<"div">;
  typography31?: Flex__<"div">;
  body231?: Flex__<"div">;
  typography32?: Flex__<"div">;
  body232?: Flex__<"div">;
  cell24?: Flex__<"div">;
  box17?: Flex__<"div">;
  typography33?: Flex__<"div">;
  body233?: Flex__<"div">;
  typography34?: Flex__<"div">;
  body234?: Flex__<"div">;
  cell34?: Flex__<"div">;
  box18?: Flex__<"div">;
  typography35?: Flex__<"div">;
  body235?: Flex__<"div">;
  typography36?: Flex__<"div">;
  body236?: Flex__<"div">;
  cell44?: Flex__<"div">;
  box19?: Flex__<"div">;
  typography37?: Flex__<"div">;
  body237?: Flex__<"div">;
  typography38?: Flex__<"div">;
  body238?: Flex__<"div">;
  cell54?: Flex__<"div">;
  box20?: Flex__<"div">;
  typography39?: Flex__<"div">;
  body239?: Flex__<"div">;
  typography40?: Flex__<"div">;
  body240?: Flex__<"div">;
  row5?: Flex__<"div">;
  cell15?: Flex__<"div">;
  box21?: Flex__<"div">;
  typography41?: Flex__<"div">;
  body241?: Flex__<"div">;
  typography42?: Flex__<"div">;
  body242?: Flex__<"div">;
  cell25?: Flex__<"div">;
  box22?: Flex__<"div">;
  typography43?: Flex__<"div">;
  body243?: Flex__<"div">;
  typography44?: Flex__<"div">;
  body244?: Flex__<"div">;
  cell35?: Flex__<"div">;
  box23?: Flex__<"div">;
  typography45?: Flex__<"div">;
  body245?: Flex__<"div">;
  typography46?: Flex__<"div">;
  body246?: Flex__<"div">;
  cell45?: Flex__<"div">;
  box24?: Flex__<"div">;
  typography47?: Flex__<"div">;
  body247?: Flex__<"div">;
  typography48?: Flex__<"div">;
  body248?: Flex__<"div">;
  cell55?: Flex__<"div">;
  box25?: Flex__<"div">;
  typography49?: Flex__<"div">;
  body249?: Flex__<"div">;
  typography50?: Flex__<"div">;
  body250?: Flex__<"div">;
  tableFooter?: Flex__<"div">;
  container?: Flex__<"div">;
  rowsPerPage?: Flex__<"div">;
  page?: Flex__<"div">;
  _110Of100?: Flex__<"div">;
  navigation?: Flex__<"div">;
  iconButton?: Flex__<"div">;
  icon?: Flex__<"div">;
  iconButton2?: Flex__<"div">;
  icon2?: Flex__<"div">;
};

export interface DefaultTableFigmaProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicTableFigma__RenderFunc(props: {
  variants: PlasmicTableFigma__VariantsArgs;
  args: PlasmicTableFigma__ArgsType;
  overrides: PlasmicTableFigma__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  let [$queries, setDollarQueries] = React.useState<
    Record<string, ReturnType<typeof usePlasmicDataOp>>
  >({});

  const new$Queries: Record<string, ReturnType<typeof usePlasmicDataOp>> = {
    query: usePlasmicDataOp(() => {
      return {
        sourceId: "isw5fcRKSnw6jaXszhcDMx",
        opId: "be2a82b4-7a61-4d6d-8dd3-1110f74a702a",
        userArgs: {},
        cacheKey: `plasmic.$.be2a82b4-7a61-4d6d-8dd3-1110f74a702a.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);

    $queries = new$Queries;
  }

  return (
    <div
      data-plasmic-name={"table"}
      data-plasmic-override={overrides.table}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        plasmic_library_tailwind_3_4_colors_css.plasmic_tokens,
        plasmic_library_tailwind_3_4_number_tokens_css.plasmic_tokens,
        sty.table
      )}
    >
      <div
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        className={classNames(projectcss.all, sty.freeBox)}
      >
        <header
          data-plasmic-name={"tableHeadRow"}
          data-plasmic-override={overrides.tableHeadRow}
          className={classNames(projectcss.all, sty.tableHeadRow)}
        >
          <div
            data-plasmic-name={"tableHead"}
            data-plasmic-override={overrides.tableHead}
            className={classNames(projectcss.all, sty.tableHead)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"mask"}
              data-plasmic-override={overrides.mask}
              hasGap={true}
              className={classNames(projectcss.all, sty.mask)}
            >
              <ArrowDownwardFilledIcon
                className={classNames(projectcss.all, sty.svg___3Cci)}
                role={"img"}
              />
            </Stack__>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__x84Lz
              )}
            >
              {"Head"}
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"mask2"}
              data-plasmic-override={overrides.mask2}
              hasGap={true}
              className={classNames(projectcss.all, sty.mask2)}
            >
              <ArrowDownwardFilledIcon
                className={classNames(projectcss.all, sty.svg__ajU65)}
                role={"img"}
              />
            </Stack__>
          </div>
          <div
            data-plasmic-name={"tableHead2"}
            data-plasmic-override={overrides.tableHead2}
            className={classNames(projectcss.all, sty.tableHead2)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"mask3"}
              data-plasmic-override={overrides.mask3}
              hasGap={true}
              className={classNames(projectcss.all, sty.mask3)}
            >
              <ArrowDownwardFilledIcon
                className={classNames(projectcss.all, sty.svg__mWvCu)}
                role={"img"}
              />
            </Stack__>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__nGDxr
              )}
            >
              {"Head"}
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"mask4"}
              data-plasmic-override={overrides.mask4}
              hasGap={true}
              className={classNames(projectcss.all, sty.mask4)}
            >
              <ArrowDownwardFilledIcon
                className={classNames(projectcss.all, sty.svg__wuTSi)}
                role={"img"}
              />
            </Stack__>
          </div>
          <div
            data-plasmic-name={"tableHead3"}
            data-plasmic-override={overrides.tableHead3}
            className={classNames(projectcss.all, sty.tableHead3)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"mask5"}
              data-plasmic-override={overrides.mask5}
              hasGap={true}
              className={classNames(projectcss.all, sty.mask5)}
            >
              <ArrowDownwardFilledIcon
                className={classNames(projectcss.all, sty.svg___9QDy)}
                role={"img"}
              />
            </Stack__>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___0EBc3
              )}
            >
              {"Head"}
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"mask6"}
              data-plasmic-override={overrides.mask6}
              hasGap={true}
              className={classNames(projectcss.all, sty.mask6)}
            >
              <ArrowDownwardFilledIcon
                className={classNames(projectcss.all, sty.svg__tiHp)}
                role={"img"}
              />
            </Stack__>
          </div>
          <div
            data-plasmic-name={"tableHead4"}
            data-plasmic-override={overrides.tableHead4}
            className={classNames(projectcss.all, sty.tableHead4)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"mask7"}
              data-plasmic-override={overrides.mask7}
              hasGap={true}
              className={classNames(projectcss.all, sty.mask7)}
            >
              <ArrowDownwardFilledIcon
                className={classNames(projectcss.all, sty.svg__b1Lb3)}
                role={"img"}
              />
            </Stack__>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qZ0Xf
              )}
            >
              {"Head"}
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"mask8"}
              data-plasmic-override={overrides.mask8}
              hasGap={true}
              className={classNames(projectcss.all, sty.mask8)}
            >
              <ArrowDownwardFilledIcon
                className={classNames(projectcss.all, sty.svg__kAZcg)}
                role={"img"}
              />
            </Stack__>
          </div>
          <div
            data-plasmic-name={"tableHead5"}
            data-plasmic-override={overrides.tableHead5}
            className={classNames(projectcss.all, sty.tableHead5)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"mask9"}
              data-plasmic-override={overrides.mask9}
              hasGap={true}
              className={classNames(projectcss.all, sty.mask9)}
            >
              <ArrowDownwardFilledIcon
                className={classNames(projectcss.all, sty.svg__j7Mma)}
                role={"img"}
              />
            </Stack__>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__umrqH
              )}
            >
              {"Head"}
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"mask10"}
              data-plasmic-override={overrides.mask10}
              hasGap={true}
              className={classNames(projectcss.all, sty.mask10)}
            >
              <ArrowDownwardFilledIcon
                className={classNames(projectcss.all, sty.svg__ltLwR)}
                role={"img"}
              />
            </Stack__>
          </div>
        </header>
      </div>
      <div
        data-plasmic-name={"row1"}
        data-plasmic-override={overrides.row1}
        className={classNames(projectcss.all, sty.row1)}
      >
        <div
          data-plasmic-name={"cell1"}
          data-plasmic-override={overrides.cell1}
          className={classNames(projectcss.all, sty.cell1)}
        >
          <div
            data-plasmic-name={"box"}
            data-plasmic-override={overrides.box}
            className={classNames(projectcss.all, sty.box)}
          >
            <div
              data-plasmic-name={"typography"}
              data-plasmic-override={overrides.typography}
              className={classNames(projectcss.all, sty.typography)}
            >
              <div
                data-plasmic-name={"body2"}
                data-plasmic-override={overrides.body2}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body2
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography2"}
              data-plasmic-override={overrides.typography2}
              className={classNames(projectcss.all, sty.typography2)}
            >
              <div
                data-plasmic-name={"body22"}
                data-plasmic-override={overrides.body22}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body22
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell2"}
          data-plasmic-override={overrides.cell2}
          className={classNames(projectcss.all, sty.cell2)}
        >
          <div
            data-plasmic-name={"box2"}
            data-plasmic-override={overrides.box2}
            className={classNames(projectcss.all, sty.box2)}
          >
            <div
              data-plasmic-name={"typography3"}
              data-plasmic-override={overrides.typography3}
              className={classNames(projectcss.all, sty.typography3)}
            >
              <div
                data-plasmic-name={"body23"}
                data-plasmic-override={overrides.body23}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body23
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography4"}
              data-plasmic-override={overrides.typography4}
              className={classNames(projectcss.all, sty.typography4)}
            >
              <div
                data-plasmic-name={"body24"}
                data-plasmic-override={overrides.body24}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body24
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell3"}
          data-plasmic-override={overrides.cell3}
          className={classNames(projectcss.all, sty.cell3)}
        >
          <div
            data-plasmic-name={"box3"}
            data-plasmic-override={overrides.box3}
            className={classNames(projectcss.all, sty.box3)}
          >
            <div
              data-plasmic-name={"typography5"}
              data-plasmic-override={overrides.typography5}
              className={classNames(projectcss.all, sty.typography5)}
            >
              <div
                data-plasmic-name={"body25"}
                data-plasmic-override={overrides.body25}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body25
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography6"}
              data-plasmic-override={overrides.typography6}
              className={classNames(projectcss.all, sty.typography6)}
            >
              <div
                data-plasmic-name={"body26"}
                data-plasmic-override={overrides.body26}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body26
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell4"}
          data-plasmic-override={overrides.cell4}
          className={classNames(projectcss.all, sty.cell4)}
        >
          <div
            data-plasmic-name={"box4"}
            data-plasmic-override={overrides.box4}
            className={classNames(projectcss.all, sty.box4)}
          >
            <div
              data-plasmic-name={"typography7"}
              data-plasmic-override={overrides.typography7}
              className={classNames(projectcss.all, sty.typography7)}
            >
              <div
                data-plasmic-name={"body27"}
                data-plasmic-override={overrides.body27}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body27
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography8"}
              data-plasmic-override={overrides.typography8}
              className={classNames(projectcss.all, sty.typography8)}
            >
              <div
                data-plasmic-name={"body28"}
                data-plasmic-override={overrides.body28}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body28
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell5"}
          data-plasmic-override={overrides.cell5}
          className={classNames(projectcss.all, sty.cell5)}
        >
          <div
            data-plasmic-name={"box5"}
            data-plasmic-override={overrides.box5}
            className={classNames(projectcss.all, sty.box5)}
          >
            <div
              data-plasmic-name={"typography9"}
              data-plasmic-override={overrides.typography9}
              className={classNames(projectcss.all, sty.typography9)}
            >
              <div
                data-plasmic-name={"body29"}
                data-plasmic-override={overrides.body29}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body29
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography10"}
              data-plasmic-override={overrides.typography10}
              className={classNames(projectcss.all, sty.typography10)}
            >
              <div
                data-plasmic-name={"body210"}
                data-plasmic-override={overrides.body210}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body210
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        data-plasmic-name={"row2"}
        data-plasmic-override={overrides.row2}
        className={classNames(projectcss.all, sty.row2)}
      >
        <div
          data-plasmic-name={"cell12"}
          data-plasmic-override={overrides.cell12}
          className={classNames(projectcss.all, sty.cell12)}
        >
          <div
            data-plasmic-name={"box6"}
            data-plasmic-override={overrides.box6}
            className={classNames(projectcss.all, sty.box6)}
          >
            <div
              data-plasmic-name={"typography11"}
              data-plasmic-override={overrides.typography11}
              className={classNames(projectcss.all, sty.typography11)}
            >
              <div
                data-plasmic-name={"body211"}
                data-plasmic-override={overrides.body211}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body211
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography12"}
              data-plasmic-override={overrides.typography12}
              className={classNames(projectcss.all, sty.typography12)}
            >
              <div
                data-plasmic-name={"body212"}
                data-plasmic-override={overrides.body212}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body212
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell22"}
          data-plasmic-override={overrides.cell22}
          className={classNames(projectcss.all, sty.cell22)}
        >
          <div
            data-plasmic-name={"box7"}
            data-plasmic-override={overrides.box7}
            className={classNames(projectcss.all, sty.box7)}
          >
            <div
              data-plasmic-name={"typography13"}
              data-plasmic-override={overrides.typography13}
              className={classNames(projectcss.all, sty.typography13)}
            >
              <div
                data-plasmic-name={"body213"}
                data-plasmic-override={overrides.body213}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body213
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography14"}
              data-plasmic-override={overrides.typography14}
              className={classNames(projectcss.all, sty.typography14)}
            >
              <div
                data-plasmic-name={"body214"}
                data-plasmic-override={overrides.body214}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body214
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell32"}
          data-plasmic-override={overrides.cell32}
          className={classNames(projectcss.all, sty.cell32)}
        >
          <div
            data-plasmic-name={"box8"}
            data-plasmic-override={overrides.box8}
            className={classNames(projectcss.all, sty.box8)}
          >
            <div
              data-plasmic-name={"typography15"}
              data-plasmic-override={overrides.typography15}
              className={classNames(projectcss.all, sty.typography15)}
            >
              <div
                data-plasmic-name={"body215"}
                data-plasmic-override={overrides.body215}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body215
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography16"}
              data-plasmic-override={overrides.typography16}
              className={classNames(projectcss.all, sty.typography16)}
            >
              <div
                data-plasmic-name={"body216"}
                data-plasmic-override={overrides.body216}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body216
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell42"}
          data-plasmic-override={overrides.cell42}
          className={classNames(projectcss.all, sty.cell42)}
        >
          <div
            data-plasmic-name={"box9"}
            data-plasmic-override={overrides.box9}
            className={classNames(projectcss.all, sty.box9)}
          >
            <div
              data-plasmic-name={"typography17"}
              data-plasmic-override={overrides.typography17}
              className={classNames(projectcss.all, sty.typography17)}
            >
              <div
                data-plasmic-name={"body217"}
                data-plasmic-override={overrides.body217}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body217
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography18"}
              data-plasmic-override={overrides.typography18}
              className={classNames(projectcss.all, sty.typography18)}
            >
              <div
                data-plasmic-name={"body218"}
                data-plasmic-override={overrides.body218}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body218
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell52"}
          data-plasmic-override={overrides.cell52}
          className={classNames(projectcss.all, sty.cell52)}
        >
          <div
            data-plasmic-name={"box10"}
            data-plasmic-override={overrides.box10}
            className={classNames(projectcss.all, sty.box10)}
          >
            <div
              data-plasmic-name={"typography19"}
              data-plasmic-override={overrides.typography19}
              className={classNames(projectcss.all, sty.typography19)}
            >
              <div
                data-plasmic-name={"body219"}
                data-plasmic-override={overrides.body219}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body219
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography20"}
              data-plasmic-override={overrides.typography20}
              className={classNames(projectcss.all, sty.typography20)}
            >
              <div
                data-plasmic-name={"body220"}
                data-plasmic-override={overrides.body220}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body220
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        data-plasmic-name={"row3"}
        data-plasmic-override={overrides.row3}
        className={classNames(projectcss.all, sty.row3)}
      >
        <div
          data-plasmic-name={"cell13"}
          data-plasmic-override={overrides.cell13}
          className={classNames(projectcss.all, sty.cell13)}
        >
          <div
            data-plasmic-name={"box11"}
            data-plasmic-override={overrides.box11}
            className={classNames(projectcss.all, sty.box11)}
          >
            <div
              data-plasmic-name={"typography21"}
              data-plasmic-override={overrides.typography21}
              className={classNames(projectcss.all, sty.typography21)}
            >
              <div
                data-plasmic-name={"body221"}
                data-plasmic-override={overrides.body221}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body221
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography22"}
              data-plasmic-override={overrides.typography22}
              className={classNames(projectcss.all, sty.typography22)}
            >
              <div
                data-plasmic-name={"body222"}
                data-plasmic-override={overrides.body222}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body222
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell23"}
          data-plasmic-override={overrides.cell23}
          className={classNames(projectcss.all, sty.cell23)}
        >
          <div
            data-plasmic-name={"box12"}
            data-plasmic-override={overrides.box12}
            className={classNames(projectcss.all, sty.box12)}
          >
            <div
              data-plasmic-name={"typography23"}
              data-plasmic-override={overrides.typography23}
              className={classNames(projectcss.all, sty.typography23)}
            >
              <div
                data-plasmic-name={"body223"}
                data-plasmic-override={overrides.body223}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body223
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography24"}
              data-plasmic-override={overrides.typography24}
              className={classNames(projectcss.all, sty.typography24)}
            >
              <div
                data-plasmic-name={"body224"}
                data-plasmic-override={overrides.body224}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body224
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell33"}
          data-plasmic-override={overrides.cell33}
          className={classNames(projectcss.all, sty.cell33)}
        >
          <div
            data-plasmic-name={"box13"}
            data-plasmic-override={overrides.box13}
            className={classNames(projectcss.all, sty.box13)}
          >
            <div
              data-plasmic-name={"typography25"}
              data-plasmic-override={overrides.typography25}
              className={classNames(projectcss.all, sty.typography25)}
            >
              <div
                data-plasmic-name={"body225"}
                data-plasmic-override={overrides.body225}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body225
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography26"}
              data-plasmic-override={overrides.typography26}
              className={classNames(projectcss.all, sty.typography26)}
            >
              <div
                data-plasmic-name={"body226"}
                data-plasmic-override={overrides.body226}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body226
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell43"}
          data-plasmic-override={overrides.cell43}
          className={classNames(projectcss.all, sty.cell43)}
        >
          <div
            data-plasmic-name={"box14"}
            data-plasmic-override={overrides.box14}
            className={classNames(projectcss.all, sty.box14)}
          >
            <div
              data-plasmic-name={"typography27"}
              data-plasmic-override={overrides.typography27}
              className={classNames(projectcss.all, sty.typography27)}
            >
              <div
                data-plasmic-name={"body227"}
                data-plasmic-override={overrides.body227}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body227
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography28"}
              data-plasmic-override={overrides.typography28}
              className={classNames(projectcss.all, sty.typography28)}
            >
              <div
                data-plasmic-name={"body228"}
                data-plasmic-override={overrides.body228}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body228
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell53"}
          data-plasmic-override={overrides.cell53}
          className={classNames(projectcss.all, sty.cell53)}
        >
          <div
            data-plasmic-name={"box15"}
            data-plasmic-override={overrides.box15}
            className={classNames(projectcss.all, sty.box15)}
          >
            <div
              data-plasmic-name={"typography29"}
              data-plasmic-override={overrides.typography29}
              className={classNames(projectcss.all, sty.typography29)}
            >
              <div
                data-plasmic-name={"body229"}
                data-plasmic-override={overrides.body229}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body229
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography30"}
              data-plasmic-override={overrides.typography30}
              className={classNames(projectcss.all, sty.typography30)}
            >
              <div
                data-plasmic-name={"body230"}
                data-plasmic-override={overrides.body230}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body230
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        data-plasmic-name={"row4"}
        data-plasmic-override={overrides.row4}
        className={classNames(projectcss.all, sty.row4)}
      >
        <div
          data-plasmic-name={"cell14"}
          data-plasmic-override={overrides.cell14}
          className={classNames(projectcss.all, sty.cell14)}
        >
          <div
            data-plasmic-name={"box16"}
            data-plasmic-override={overrides.box16}
            className={classNames(projectcss.all, sty.box16)}
          >
            <div
              data-plasmic-name={"typography31"}
              data-plasmic-override={overrides.typography31}
              className={classNames(projectcss.all, sty.typography31)}
            >
              <div
                data-plasmic-name={"body231"}
                data-plasmic-override={overrides.body231}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body231
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography32"}
              data-plasmic-override={overrides.typography32}
              className={classNames(projectcss.all, sty.typography32)}
            >
              <div
                data-plasmic-name={"body232"}
                data-plasmic-override={overrides.body232}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body232
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell24"}
          data-plasmic-override={overrides.cell24}
          className={classNames(projectcss.all, sty.cell24)}
        >
          <div
            data-plasmic-name={"box17"}
            data-plasmic-override={overrides.box17}
            className={classNames(projectcss.all, sty.box17)}
          >
            <div
              data-plasmic-name={"typography33"}
              data-plasmic-override={overrides.typography33}
              className={classNames(projectcss.all, sty.typography33)}
            >
              <div
                data-plasmic-name={"body233"}
                data-plasmic-override={overrides.body233}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body233
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography34"}
              data-plasmic-override={overrides.typography34}
              className={classNames(projectcss.all, sty.typography34)}
            >
              <div
                data-plasmic-name={"body234"}
                data-plasmic-override={overrides.body234}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body234
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell34"}
          data-plasmic-override={overrides.cell34}
          className={classNames(projectcss.all, sty.cell34)}
        >
          <div
            data-plasmic-name={"box18"}
            data-plasmic-override={overrides.box18}
            className={classNames(projectcss.all, sty.box18)}
          >
            <div
              data-plasmic-name={"typography35"}
              data-plasmic-override={overrides.typography35}
              className={classNames(projectcss.all, sty.typography35)}
            >
              <div
                data-plasmic-name={"body235"}
                data-plasmic-override={overrides.body235}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body235
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography36"}
              data-plasmic-override={overrides.typography36}
              className={classNames(projectcss.all, sty.typography36)}
            >
              <div
                data-plasmic-name={"body236"}
                data-plasmic-override={overrides.body236}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body236
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell44"}
          data-plasmic-override={overrides.cell44}
          className={classNames(projectcss.all, sty.cell44)}
        >
          <div
            data-plasmic-name={"box19"}
            data-plasmic-override={overrides.box19}
            className={classNames(projectcss.all, sty.box19)}
          >
            <div
              data-plasmic-name={"typography37"}
              data-plasmic-override={overrides.typography37}
              className={classNames(projectcss.all, sty.typography37)}
            >
              <div
                data-plasmic-name={"body237"}
                data-plasmic-override={overrides.body237}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body237
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography38"}
              data-plasmic-override={overrides.typography38}
              className={classNames(projectcss.all, sty.typography38)}
            >
              <div
                data-plasmic-name={"body238"}
                data-plasmic-override={overrides.body238}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body238
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell54"}
          data-plasmic-override={overrides.cell54}
          className={classNames(projectcss.all, sty.cell54)}
        >
          <div
            data-plasmic-name={"box20"}
            data-plasmic-override={overrides.box20}
            className={classNames(projectcss.all, sty.box20)}
          >
            <div
              data-plasmic-name={"typography39"}
              data-plasmic-override={overrides.typography39}
              className={classNames(projectcss.all, sty.typography39)}
            >
              <div
                data-plasmic-name={"body239"}
                data-plasmic-override={overrides.body239}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body239
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography40"}
              data-plasmic-override={overrides.typography40}
              className={classNames(projectcss.all, sty.typography40)}
            >
              <div
                data-plasmic-name={"body240"}
                data-plasmic-override={overrides.body240}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body240
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        data-plasmic-name={"row5"}
        data-plasmic-override={overrides.row5}
        className={classNames(projectcss.all, sty.row5)}
      >
        <div
          data-plasmic-name={"cell15"}
          data-plasmic-override={overrides.cell15}
          className={classNames(projectcss.all, sty.cell15)}
        >
          <div
            data-plasmic-name={"box21"}
            data-plasmic-override={overrides.box21}
            className={classNames(projectcss.all, sty.box21)}
          >
            <div
              data-plasmic-name={"typography41"}
              data-plasmic-override={overrides.typography41}
              className={classNames(projectcss.all, sty.typography41)}
            >
              <div
                data-plasmic-name={"body241"}
                data-plasmic-override={overrides.body241}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body241
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography42"}
              data-plasmic-override={overrides.typography42}
              className={classNames(projectcss.all, sty.typography42)}
            >
              <div
                data-plasmic-name={"body242"}
                data-plasmic-override={overrides.body242}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body242
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell25"}
          data-plasmic-override={overrides.cell25}
          className={classNames(projectcss.all, sty.cell25)}
        >
          <div
            data-plasmic-name={"box22"}
            data-plasmic-override={overrides.box22}
            className={classNames(projectcss.all, sty.box22)}
          >
            <div
              data-plasmic-name={"typography43"}
              data-plasmic-override={overrides.typography43}
              className={classNames(projectcss.all, sty.typography43)}
            >
              <div
                data-plasmic-name={"body243"}
                data-plasmic-override={overrides.body243}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body243
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography44"}
              data-plasmic-override={overrides.typography44}
              className={classNames(projectcss.all, sty.typography44)}
            >
              <div
                data-plasmic-name={"body244"}
                data-plasmic-override={overrides.body244}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body244
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell35"}
          data-plasmic-override={overrides.cell35}
          className={classNames(projectcss.all, sty.cell35)}
        >
          <div
            data-plasmic-name={"box23"}
            data-plasmic-override={overrides.box23}
            className={classNames(projectcss.all, sty.box23)}
          >
            <div
              data-plasmic-name={"typography45"}
              data-plasmic-override={overrides.typography45}
              className={classNames(projectcss.all, sty.typography45)}
            >
              <div
                data-plasmic-name={"body245"}
                data-plasmic-override={overrides.body245}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body245
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography46"}
              data-plasmic-override={overrides.typography46}
              className={classNames(projectcss.all, sty.typography46)}
            >
              <div
                data-plasmic-name={"body246"}
                data-plasmic-override={overrides.body246}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body246
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell45"}
          data-plasmic-override={overrides.cell45}
          className={classNames(projectcss.all, sty.cell45)}
        >
          <div
            data-plasmic-name={"box24"}
            data-plasmic-override={overrides.box24}
            className={classNames(projectcss.all, sty.box24)}
          >
            <div
              data-plasmic-name={"typography47"}
              data-plasmic-override={overrides.typography47}
              className={classNames(projectcss.all, sty.typography47)}
            >
              <div
                data-plasmic-name={"body247"}
                data-plasmic-override={overrides.body247}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body247
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography48"}
              data-plasmic-override={overrides.typography48}
              className={classNames(projectcss.all, sty.typography48)}
            >
              <div
                data-plasmic-name={"body248"}
                data-plasmic-override={overrides.body248}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body248
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"cell55"}
          data-plasmic-override={overrides.cell55}
          className={classNames(projectcss.all, sty.cell55)}
        >
          <div
            data-plasmic-name={"box25"}
            data-plasmic-override={overrides.box25}
            className={classNames(projectcss.all, sty.box25)}
          >
            <div
              data-plasmic-name={"typography49"}
              data-plasmic-override={overrides.typography49}
              className={classNames(projectcss.all, sty.typography49)}
            >
              <div
                data-plasmic-name={"body249"}
                data-plasmic-override={overrides.body249}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body249
                )}
              >
                {"Cell"}
              </div>
            </div>
            <div
              data-plasmic-name={"typography50"}
              data-plasmic-override={overrides.typography50}
              className={classNames(projectcss.all, sty.typography50)}
            >
              <div
                data-plasmic-name={"body250"}
                data-plasmic-override={overrides.body250}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.body250
                )}
              >
                {"Typography"}
              </div>
            </div>
          </div>
        </div>
      </div>
      <Stack__
        as={"div"}
        data-plasmic-name={"tableFooter"}
        data-plasmic-override={overrides.tableFooter}
        hasGap={true}
        className={classNames(projectcss.all, sty.tableFooter)}
      >
        <Stack__
          as={"div"}
          data-plasmic-name={"container"}
          data-plasmic-override={overrides.container}
          hasGap={true}
          className={classNames(projectcss.all, sty.container)}
        >
          <div
            data-plasmic-name={"rowsPerPage"}
            data-plasmic-override={overrides.rowsPerPage}
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.rowsPerPage
            )}
          >
            {"Rows per page:"}
          </div>
          <div
            data-plasmic-name={"page"}
            data-plasmic-override={overrides.page}
            className={classNames(projectcss.all, sty.page)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__v1Rnc
              )}
            >
              {"10"}
            </div>
            <ArrowDropDownFilledIcon
              className={classNames(projectcss.all, sty.svg__cY5Zz)}
              role={"img"}
            />
          </div>
        </Stack__>
        <div
          data-plasmic-name={"_110Of100"}
          data-plasmic-override={overrides._110Of100}
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty._110Of100
          )}
        >
          {"1-5 of 13"}
        </div>
        <div
          data-plasmic-name={"navigation"}
          data-plasmic-override={overrides.navigation}
          className={classNames(projectcss.all, sty.navigation)}
        >
          <div
            data-plasmic-name={"iconButton"}
            data-plasmic-override={overrides.iconButton}
            className={classNames(projectcss.all, sty.iconButton)}
          >
            <div
              data-plasmic-name={"icon"}
              data-plasmic-override={overrides.icon}
              className={classNames(projectcss.all, sty.icon)}
            >
              <ChevronLeftFilledIcon
                className={classNames(projectcss.all, sty.svg__fKwE)}
                role={"img"}
              />
            </div>
          </div>
          <div
            data-plasmic-name={"iconButton2"}
            data-plasmic-override={overrides.iconButton2}
            className={classNames(projectcss.all, sty.iconButton2)}
          >
            <div
              data-plasmic-name={"icon2"}
              data-plasmic-override={overrides.icon2}
              className={classNames(projectcss.all, sty.icon2)}
            >
              <ChevronRightFilledIcon
                className={classNames(projectcss.all, sty.svg__r5Qh8)}
                role={"img"}
              />
            </div>
          </div>
        </div>
      </Stack__>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  table: [
    "table",
    "freeBox",
    "tableHeadRow",
    "tableHead",
    "mask",
    "mask2",
    "tableHead2",
    "mask3",
    "mask4",
    "tableHead3",
    "mask5",
    "mask6",
    "tableHead4",
    "mask7",
    "mask8",
    "tableHead5",
    "mask9",
    "mask10",
    "row1",
    "cell1",
    "box",
    "typography",
    "body2",
    "typography2",
    "body22",
    "cell2",
    "box2",
    "typography3",
    "body23",
    "typography4",
    "body24",
    "cell3",
    "box3",
    "typography5",
    "body25",
    "typography6",
    "body26",
    "cell4",
    "box4",
    "typography7",
    "body27",
    "typography8",
    "body28",
    "cell5",
    "box5",
    "typography9",
    "body29",
    "typography10",
    "body210",
    "row2",
    "cell12",
    "box6",
    "typography11",
    "body211",
    "typography12",
    "body212",
    "cell22",
    "box7",
    "typography13",
    "body213",
    "typography14",
    "body214",
    "cell32",
    "box8",
    "typography15",
    "body215",
    "typography16",
    "body216",
    "cell42",
    "box9",
    "typography17",
    "body217",
    "typography18",
    "body218",
    "cell52",
    "box10",
    "typography19",
    "body219",
    "typography20",
    "body220",
    "row3",
    "cell13",
    "box11",
    "typography21",
    "body221",
    "typography22",
    "body222",
    "cell23",
    "box12",
    "typography23",
    "body223",
    "typography24",
    "body224",
    "cell33",
    "box13",
    "typography25",
    "body225",
    "typography26",
    "body226",
    "cell43",
    "box14",
    "typography27",
    "body227",
    "typography28",
    "body228",
    "cell53",
    "box15",
    "typography29",
    "body229",
    "typography30",
    "body230",
    "row4",
    "cell14",
    "box16",
    "typography31",
    "body231",
    "typography32",
    "body232",
    "cell24",
    "box17",
    "typography33",
    "body233",
    "typography34",
    "body234",
    "cell34",
    "box18",
    "typography35",
    "body235",
    "typography36",
    "body236",
    "cell44",
    "box19",
    "typography37",
    "body237",
    "typography38",
    "body238",
    "cell54",
    "box20",
    "typography39",
    "body239",
    "typography40",
    "body240",
    "row5",
    "cell15",
    "box21",
    "typography41",
    "body241",
    "typography42",
    "body242",
    "cell25",
    "box22",
    "typography43",
    "body243",
    "typography44",
    "body244",
    "cell35",
    "box23",
    "typography45",
    "body245",
    "typography46",
    "body246",
    "cell45",
    "box24",
    "typography47",
    "body247",
    "typography48",
    "body248",
    "cell55",
    "box25",
    "typography49",
    "body249",
    "typography50",
    "body250",
    "tableFooter",
    "container",
    "rowsPerPage",
    "page",
    "_110Of100",
    "navigation",
    "iconButton",
    "icon",
    "iconButton2",
    "icon2"
  ],
  freeBox: [
    "freeBox",
    "tableHeadRow",
    "tableHead",
    "mask",
    "mask2",
    "tableHead2",
    "mask3",
    "mask4",
    "tableHead3",
    "mask5",
    "mask6",
    "tableHead4",
    "mask7",
    "mask8",
    "tableHead5",
    "mask9",
    "mask10"
  ],
  tableHeadRow: [
    "tableHeadRow",
    "tableHead",
    "mask",
    "mask2",
    "tableHead2",
    "mask3",
    "mask4",
    "tableHead3",
    "mask5",
    "mask6",
    "tableHead4",
    "mask7",
    "mask8",
    "tableHead5",
    "mask9",
    "mask10"
  ],
  tableHead: ["tableHead", "mask", "mask2"],
  mask: ["mask"],
  mask2: ["mask2"],
  tableHead2: ["tableHead2", "mask3", "mask4"],
  mask3: ["mask3"],
  mask4: ["mask4"],
  tableHead3: ["tableHead3", "mask5", "mask6"],
  mask5: ["mask5"],
  mask6: ["mask6"],
  tableHead4: ["tableHead4", "mask7", "mask8"],
  mask7: ["mask7"],
  mask8: ["mask8"],
  tableHead5: ["tableHead5", "mask9", "mask10"],
  mask9: ["mask9"],
  mask10: ["mask10"],
  row1: [
    "row1",
    "cell1",
    "box",
    "typography",
    "body2",
    "typography2",
    "body22",
    "cell2",
    "box2",
    "typography3",
    "body23",
    "typography4",
    "body24",
    "cell3",
    "box3",
    "typography5",
    "body25",
    "typography6",
    "body26",
    "cell4",
    "box4",
    "typography7",
    "body27",
    "typography8",
    "body28",
    "cell5",
    "box5",
    "typography9",
    "body29",
    "typography10",
    "body210"
  ],
  cell1: ["cell1", "box", "typography", "body2", "typography2", "body22"],
  box: ["box", "typography", "body2", "typography2", "body22"],
  typography: ["typography", "body2"],
  body2: ["body2"],
  typography2: ["typography2", "body22"],
  body22: ["body22"],
  cell2: ["cell2", "box2", "typography3", "body23", "typography4", "body24"],
  box2: ["box2", "typography3", "body23", "typography4", "body24"],
  typography3: ["typography3", "body23"],
  body23: ["body23"],
  typography4: ["typography4", "body24"],
  body24: ["body24"],
  cell3: ["cell3", "box3", "typography5", "body25", "typography6", "body26"],
  box3: ["box3", "typography5", "body25", "typography6", "body26"],
  typography5: ["typography5", "body25"],
  body25: ["body25"],
  typography6: ["typography6", "body26"],
  body26: ["body26"],
  cell4: ["cell4", "box4", "typography7", "body27", "typography8", "body28"],
  box4: ["box4", "typography7", "body27", "typography8", "body28"],
  typography7: ["typography7", "body27"],
  body27: ["body27"],
  typography8: ["typography8", "body28"],
  body28: ["body28"],
  cell5: ["cell5", "box5", "typography9", "body29", "typography10", "body210"],
  box5: ["box5", "typography9", "body29", "typography10", "body210"],
  typography9: ["typography9", "body29"],
  body29: ["body29"],
  typography10: ["typography10", "body210"],
  body210: ["body210"],
  row2: [
    "row2",
    "cell12",
    "box6",
    "typography11",
    "body211",
    "typography12",
    "body212",
    "cell22",
    "box7",
    "typography13",
    "body213",
    "typography14",
    "body214",
    "cell32",
    "box8",
    "typography15",
    "body215",
    "typography16",
    "body216",
    "cell42",
    "box9",
    "typography17",
    "body217",
    "typography18",
    "body218",
    "cell52",
    "box10",
    "typography19",
    "body219",
    "typography20",
    "body220"
  ],
  cell12: [
    "cell12",
    "box6",
    "typography11",
    "body211",
    "typography12",
    "body212"
  ],
  box6: ["box6", "typography11", "body211", "typography12", "body212"],
  typography11: ["typography11", "body211"],
  body211: ["body211"],
  typography12: ["typography12", "body212"],
  body212: ["body212"],
  cell22: [
    "cell22",
    "box7",
    "typography13",
    "body213",
    "typography14",
    "body214"
  ],
  box7: ["box7", "typography13", "body213", "typography14", "body214"],
  typography13: ["typography13", "body213"],
  body213: ["body213"],
  typography14: ["typography14", "body214"],
  body214: ["body214"],
  cell32: [
    "cell32",
    "box8",
    "typography15",
    "body215",
    "typography16",
    "body216"
  ],
  box8: ["box8", "typography15", "body215", "typography16", "body216"],
  typography15: ["typography15", "body215"],
  body215: ["body215"],
  typography16: ["typography16", "body216"],
  body216: ["body216"],
  cell42: [
    "cell42",
    "box9",
    "typography17",
    "body217",
    "typography18",
    "body218"
  ],
  box9: ["box9", "typography17", "body217", "typography18", "body218"],
  typography17: ["typography17", "body217"],
  body217: ["body217"],
  typography18: ["typography18", "body218"],
  body218: ["body218"],
  cell52: [
    "cell52",
    "box10",
    "typography19",
    "body219",
    "typography20",
    "body220"
  ],
  box10: ["box10", "typography19", "body219", "typography20", "body220"],
  typography19: ["typography19", "body219"],
  body219: ["body219"],
  typography20: ["typography20", "body220"],
  body220: ["body220"],
  row3: [
    "row3",
    "cell13",
    "box11",
    "typography21",
    "body221",
    "typography22",
    "body222",
    "cell23",
    "box12",
    "typography23",
    "body223",
    "typography24",
    "body224",
    "cell33",
    "box13",
    "typography25",
    "body225",
    "typography26",
    "body226",
    "cell43",
    "box14",
    "typography27",
    "body227",
    "typography28",
    "body228",
    "cell53",
    "box15",
    "typography29",
    "body229",
    "typography30",
    "body230"
  ],
  cell13: [
    "cell13",
    "box11",
    "typography21",
    "body221",
    "typography22",
    "body222"
  ],
  box11: ["box11", "typography21", "body221", "typography22", "body222"],
  typography21: ["typography21", "body221"],
  body221: ["body221"],
  typography22: ["typography22", "body222"],
  body222: ["body222"],
  cell23: [
    "cell23",
    "box12",
    "typography23",
    "body223",
    "typography24",
    "body224"
  ],
  box12: ["box12", "typography23", "body223", "typography24", "body224"],
  typography23: ["typography23", "body223"],
  body223: ["body223"],
  typography24: ["typography24", "body224"],
  body224: ["body224"],
  cell33: [
    "cell33",
    "box13",
    "typography25",
    "body225",
    "typography26",
    "body226"
  ],
  box13: ["box13", "typography25", "body225", "typography26", "body226"],
  typography25: ["typography25", "body225"],
  body225: ["body225"],
  typography26: ["typography26", "body226"],
  body226: ["body226"],
  cell43: [
    "cell43",
    "box14",
    "typography27",
    "body227",
    "typography28",
    "body228"
  ],
  box14: ["box14", "typography27", "body227", "typography28", "body228"],
  typography27: ["typography27", "body227"],
  body227: ["body227"],
  typography28: ["typography28", "body228"],
  body228: ["body228"],
  cell53: [
    "cell53",
    "box15",
    "typography29",
    "body229",
    "typography30",
    "body230"
  ],
  box15: ["box15", "typography29", "body229", "typography30", "body230"],
  typography29: ["typography29", "body229"],
  body229: ["body229"],
  typography30: ["typography30", "body230"],
  body230: ["body230"],
  row4: [
    "row4",
    "cell14",
    "box16",
    "typography31",
    "body231",
    "typography32",
    "body232",
    "cell24",
    "box17",
    "typography33",
    "body233",
    "typography34",
    "body234",
    "cell34",
    "box18",
    "typography35",
    "body235",
    "typography36",
    "body236",
    "cell44",
    "box19",
    "typography37",
    "body237",
    "typography38",
    "body238",
    "cell54",
    "box20",
    "typography39",
    "body239",
    "typography40",
    "body240"
  ],
  cell14: [
    "cell14",
    "box16",
    "typography31",
    "body231",
    "typography32",
    "body232"
  ],
  box16: ["box16", "typography31", "body231", "typography32", "body232"],
  typography31: ["typography31", "body231"],
  body231: ["body231"],
  typography32: ["typography32", "body232"],
  body232: ["body232"],
  cell24: [
    "cell24",
    "box17",
    "typography33",
    "body233",
    "typography34",
    "body234"
  ],
  box17: ["box17", "typography33", "body233", "typography34", "body234"],
  typography33: ["typography33", "body233"],
  body233: ["body233"],
  typography34: ["typography34", "body234"],
  body234: ["body234"],
  cell34: [
    "cell34",
    "box18",
    "typography35",
    "body235",
    "typography36",
    "body236"
  ],
  box18: ["box18", "typography35", "body235", "typography36", "body236"],
  typography35: ["typography35", "body235"],
  body235: ["body235"],
  typography36: ["typography36", "body236"],
  body236: ["body236"],
  cell44: [
    "cell44",
    "box19",
    "typography37",
    "body237",
    "typography38",
    "body238"
  ],
  box19: ["box19", "typography37", "body237", "typography38", "body238"],
  typography37: ["typography37", "body237"],
  body237: ["body237"],
  typography38: ["typography38", "body238"],
  body238: ["body238"],
  cell54: [
    "cell54",
    "box20",
    "typography39",
    "body239",
    "typography40",
    "body240"
  ],
  box20: ["box20", "typography39", "body239", "typography40", "body240"],
  typography39: ["typography39", "body239"],
  body239: ["body239"],
  typography40: ["typography40", "body240"],
  body240: ["body240"],
  row5: [
    "row5",
    "cell15",
    "box21",
    "typography41",
    "body241",
    "typography42",
    "body242",
    "cell25",
    "box22",
    "typography43",
    "body243",
    "typography44",
    "body244",
    "cell35",
    "box23",
    "typography45",
    "body245",
    "typography46",
    "body246",
    "cell45",
    "box24",
    "typography47",
    "body247",
    "typography48",
    "body248",
    "cell55",
    "box25",
    "typography49",
    "body249",
    "typography50",
    "body250"
  ],
  cell15: [
    "cell15",
    "box21",
    "typography41",
    "body241",
    "typography42",
    "body242"
  ],
  box21: ["box21", "typography41", "body241", "typography42", "body242"],
  typography41: ["typography41", "body241"],
  body241: ["body241"],
  typography42: ["typography42", "body242"],
  body242: ["body242"],
  cell25: [
    "cell25",
    "box22",
    "typography43",
    "body243",
    "typography44",
    "body244"
  ],
  box22: ["box22", "typography43", "body243", "typography44", "body244"],
  typography43: ["typography43", "body243"],
  body243: ["body243"],
  typography44: ["typography44", "body244"],
  body244: ["body244"],
  cell35: [
    "cell35",
    "box23",
    "typography45",
    "body245",
    "typography46",
    "body246"
  ],
  box23: ["box23", "typography45", "body245", "typography46", "body246"],
  typography45: ["typography45", "body245"],
  body245: ["body245"],
  typography46: ["typography46", "body246"],
  body246: ["body246"],
  cell45: [
    "cell45",
    "box24",
    "typography47",
    "body247",
    "typography48",
    "body248"
  ],
  box24: ["box24", "typography47", "body247", "typography48", "body248"],
  typography47: ["typography47", "body247"],
  body247: ["body247"],
  typography48: ["typography48", "body248"],
  body248: ["body248"],
  cell55: [
    "cell55",
    "box25",
    "typography49",
    "body249",
    "typography50",
    "body250"
  ],
  box25: ["box25", "typography49", "body249", "typography50", "body250"],
  typography49: ["typography49", "body249"],
  body249: ["body249"],
  typography50: ["typography50", "body250"],
  body250: ["body250"],
  tableFooter: [
    "tableFooter",
    "container",
    "rowsPerPage",
    "page",
    "_110Of100",
    "navigation",
    "iconButton",
    "icon",
    "iconButton2",
    "icon2"
  ],
  container: ["container", "rowsPerPage", "page"],
  rowsPerPage: ["rowsPerPage"],
  page: ["page"],
  _110Of100: ["_110Of100"],
  navigation: ["navigation", "iconButton", "icon", "iconButton2", "icon2"],
  iconButton: ["iconButton", "icon"],
  icon: ["icon"],
  iconButton2: ["iconButton2", "icon2"],
  icon2: ["icon2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  table: "div";
  freeBox: "div";
  tableHeadRow: "header";
  tableHead: "div";
  mask: "div";
  mask2: "div";
  tableHead2: "div";
  mask3: "div";
  mask4: "div";
  tableHead3: "div";
  mask5: "div";
  mask6: "div";
  tableHead4: "div";
  mask7: "div";
  mask8: "div";
  tableHead5: "div";
  mask9: "div";
  mask10: "div";
  row1: "div";
  cell1: "div";
  box: "div";
  typography: "div";
  body2: "div";
  typography2: "div";
  body22: "div";
  cell2: "div";
  box2: "div";
  typography3: "div";
  body23: "div";
  typography4: "div";
  body24: "div";
  cell3: "div";
  box3: "div";
  typography5: "div";
  body25: "div";
  typography6: "div";
  body26: "div";
  cell4: "div";
  box4: "div";
  typography7: "div";
  body27: "div";
  typography8: "div";
  body28: "div";
  cell5: "div";
  box5: "div";
  typography9: "div";
  body29: "div";
  typography10: "div";
  body210: "div";
  row2: "div";
  cell12: "div";
  box6: "div";
  typography11: "div";
  body211: "div";
  typography12: "div";
  body212: "div";
  cell22: "div";
  box7: "div";
  typography13: "div";
  body213: "div";
  typography14: "div";
  body214: "div";
  cell32: "div";
  box8: "div";
  typography15: "div";
  body215: "div";
  typography16: "div";
  body216: "div";
  cell42: "div";
  box9: "div";
  typography17: "div";
  body217: "div";
  typography18: "div";
  body218: "div";
  cell52: "div";
  box10: "div";
  typography19: "div";
  body219: "div";
  typography20: "div";
  body220: "div";
  row3: "div";
  cell13: "div";
  box11: "div";
  typography21: "div";
  body221: "div";
  typography22: "div";
  body222: "div";
  cell23: "div";
  box12: "div";
  typography23: "div";
  body223: "div";
  typography24: "div";
  body224: "div";
  cell33: "div";
  box13: "div";
  typography25: "div";
  body225: "div";
  typography26: "div";
  body226: "div";
  cell43: "div";
  box14: "div";
  typography27: "div";
  body227: "div";
  typography28: "div";
  body228: "div";
  cell53: "div";
  box15: "div";
  typography29: "div";
  body229: "div";
  typography30: "div";
  body230: "div";
  row4: "div";
  cell14: "div";
  box16: "div";
  typography31: "div";
  body231: "div";
  typography32: "div";
  body232: "div";
  cell24: "div";
  box17: "div";
  typography33: "div";
  body233: "div";
  typography34: "div";
  body234: "div";
  cell34: "div";
  box18: "div";
  typography35: "div";
  body235: "div";
  typography36: "div";
  body236: "div";
  cell44: "div";
  box19: "div";
  typography37: "div";
  body237: "div";
  typography38: "div";
  body238: "div";
  cell54: "div";
  box20: "div";
  typography39: "div";
  body239: "div";
  typography40: "div";
  body240: "div";
  row5: "div";
  cell15: "div";
  box21: "div";
  typography41: "div";
  body241: "div";
  typography42: "div";
  body242: "div";
  cell25: "div";
  box22: "div";
  typography43: "div";
  body243: "div";
  typography44: "div";
  body244: "div";
  cell35: "div";
  box23: "div";
  typography45: "div";
  body245: "div";
  typography46: "div";
  body246: "div";
  cell45: "div";
  box24: "div";
  typography47: "div";
  body247: "div";
  typography48: "div";
  body248: "div";
  cell55: "div";
  box25: "div";
  typography49: "div";
  body249: "div";
  typography50: "div";
  body250: "div";
  tableFooter: "div";
  container: "div";
  rowsPerPage: "div";
  page: "div";
  _110Of100: "div";
  navigation: "div";
  iconButton: "div";
  icon: "div";
  iconButton2: "div";
  icon2: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicTableFigma__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicTableFigma__VariantsArgs;
    args?: PlasmicTableFigma__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicTableFigma__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicTableFigma__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicTableFigma__ArgProps,
          internalVariantPropNames: PlasmicTableFigma__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicTableFigma__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "table") {
    func.displayName = "PlasmicTableFigma";
  } else {
    func.displayName = `PlasmicTableFigma.${nodeName}`;
  }
  return func;
}

export const PlasmicTableFigma = Object.assign(
  // Top-level PlasmicTableFigma renders the root element
  makeNodeComponent("table"),
  {
    // Helper components rendering sub-elements
    freeBox: makeNodeComponent("freeBox"),
    tableHeadRow: makeNodeComponent("tableHeadRow"),
    tableHead: makeNodeComponent("tableHead"),
    mask: makeNodeComponent("mask"),
    mask2: makeNodeComponent("mask2"),
    tableHead2: makeNodeComponent("tableHead2"),
    mask3: makeNodeComponent("mask3"),
    mask4: makeNodeComponent("mask4"),
    tableHead3: makeNodeComponent("tableHead3"),
    mask5: makeNodeComponent("mask5"),
    mask6: makeNodeComponent("mask6"),
    tableHead4: makeNodeComponent("tableHead4"),
    mask7: makeNodeComponent("mask7"),
    mask8: makeNodeComponent("mask8"),
    tableHead5: makeNodeComponent("tableHead5"),
    mask9: makeNodeComponent("mask9"),
    mask10: makeNodeComponent("mask10"),
    row1: makeNodeComponent("row1"),
    cell1: makeNodeComponent("cell1"),
    box: makeNodeComponent("box"),
    typography: makeNodeComponent("typography"),
    body2: makeNodeComponent("body2"),
    typography2: makeNodeComponent("typography2"),
    body22: makeNodeComponent("body22"),
    cell2: makeNodeComponent("cell2"),
    box2: makeNodeComponent("box2"),
    typography3: makeNodeComponent("typography3"),
    body23: makeNodeComponent("body23"),
    typography4: makeNodeComponent("typography4"),
    body24: makeNodeComponent("body24"),
    cell3: makeNodeComponent("cell3"),
    box3: makeNodeComponent("box3"),
    typography5: makeNodeComponent("typography5"),
    body25: makeNodeComponent("body25"),
    typography6: makeNodeComponent("typography6"),
    body26: makeNodeComponent("body26"),
    cell4: makeNodeComponent("cell4"),
    box4: makeNodeComponent("box4"),
    typography7: makeNodeComponent("typography7"),
    body27: makeNodeComponent("body27"),
    typography8: makeNodeComponent("typography8"),
    body28: makeNodeComponent("body28"),
    cell5: makeNodeComponent("cell5"),
    box5: makeNodeComponent("box5"),
    typography9: makeNodeComponent("typography9"),
    body29: makeNodeComponent("body29"),
    typography10: makeNodeComponent("typography10"),
    body210: makeNodeComponent("body210"),
    row2: makeNodeComponent("row2"),
    cell12: makeNodeComponent("cell12"),
    box6: makeNodeComponent("box6"),
    typography11: makeNodeComponent("typography11"),
    body211: makeNodeComponent("body211"),
    typography12: makeNodeComponent("typography12"),
    body212: makeNodeComponent("body212"),
    cell22: makeNodeComponent("cell22"),
    box7: makeNodeComponent("box7"),
    typography13: makeNodeComponent("typography13"),
    body213: makeNodeComponent("body213"),
    typography14: makeNodeComponent("typography14"),
    body214: makeNodeComponent("body214"),
    cell32: makeNodeComponent("cell32"),
    box8: makeNodeComponent("box8"),
    typography15: makeNodeComponent("typography15"),
    body215: makeNodeComponent("body215"),
    typography16: makeNodeComponent("typography16"),
    body216: makeNodeComponent("body216"),
    cell42: makeNodeComponent("cell42"),
    box9: makeNodeComponent("box9"),
    typography17: makeNodeComponent("typography17"),
    body217: makeNodeComponent("body217"),
    typography18: makeNodeComponent("typography18"),
    body218: makeNodeComponent("body218"),
    cell52: makeNodeComponent("cell52"),
    box10: makeNodeComponent("box10"),
    typography19: makeNodeComponent("typography19"),
    body219: makeNodeComponent("body219"),
    typography20: makeNodeComponent("typography20"),
    body220: makeNodeComponent("body220"),
    row3: makeNodeComponent("row3"),
    cell13: makeNodeComponent("cell13"),
    box11: makeNodeComponent("box11"),
    typography21: makeNodeComponent("typography21"),
    body221: makeNodeComponent("body221"),
    typography22: makeNodeComponent("typography22"),
    body222: makeNodeComponent("body222"),
    cell23: makeNodeComponent("cell23"),
    box12: makeNodeComponent("box12"),
    typography23: makeNodeComponent("typography23"),
    body223: makeNodeComponent("body223"),
    typography24: makeNodeComponent("typography24"),
    body224: makeNodeComponent("body224"),
    cell33: makeNodeComponent("cell33"),
    box13: makeNodeComponent("box13"),
    typography25: makeNodeComponent("typography25"),
    body225: makeNodeComponent("body225"),
    typography26: makeNodeComponent("typography26"),
    body226: makeNodeComponent("body226"),
    cell43: makeNodeComponent("cell43"),
    box14: makeNodeComponent("box14"),
    typography27: makeNodeComponent("typography27"),
    body227: makeNodeComponent("body227"),
    typography28: makeNodeComponent("typography28"),
    body228: makeNodeComponent("body228"),
    cell53: makeNodeComponent("cell53"),
    box15: makeNodeComponent("box15"),
    typography29: makeNodeComponent("typography29"),
    body229: makeNodeComponent("body229"),
    typography30: makeNodeComponent("typography30"),
    body230: makeNodeComponent("body230"),
    row4: makeNodeComponent("row4"),
    cell14: makeNodeComponent("cell14"),
    box16: makeNodeComponent("box16"),
    typography31: makeNodeComponent("typography31"),
    body231: makeNodeComponent("body231"),
    typography32: makeNodeComponent("typography32"),
    body232: makeNodeComponent("body232"),
    cell24: makeNodeComponent("cell24"),
    box17: makeNodeComponent("box17"),
    typography33: makeNodeComponent("typography33"),
    body233: makeNodeComponent("body233"),
    typography34: makeNodeComponent("typography34"),
    body234: makeNodeComponent("body234"),
    cell34: makeNodeComponent("cell34"),
    box18: makeNodeComponent("box18"),
    typography35: makeNodeComponent("typography35"),
    body235: makeNodeComponent("body235"),
    typography36: makeNodeComponent("typography36"),
    body236: makeNodeComponent("body236"),
    cell44: makeNodeComponent("cell44"),
    box19: makeNodeComponent("box19"),
    typography37: makeNodeComponent("typography37"),
    body237: makeNodeComponent("body237"),
    typography38: makeNodeComponent("typography38"),
    body238: makeNodeComponent("body238"),
    cell54: makeNodeComponent("cell54"),
    box20: makeNodeComponent("box20"),
    typography39: makeNodeComponent("typography39"),
    body239: makeNodeComponent("body239"),
    typography40: makeNodeComponent("typography40"),
    body240: makeNodeComponent("body240"),
    row5: makeNodeComponent("row5"),
    cell15: makeNodeComponent("cell15"),
    box21: makeNodeComponent("box21"),
    typography41: makeNodeComponent("typography41"),
    body241: makeNodeComponent("body241"),
    typography42: makeNodeComponent("typography42"),
    body242: makeNodeComponent("body242"),
    cell25: makeNodeComponent("cell25"),
    box22: makeNodeComponent("box22"),
    typography43: makeNodeComponent("typography43"),
    body243: makeNodeComponent("body243"),
    typography44: makeNodeComponent("typography44"),
    body244: makeNodeComponent("body244"),
    cell35: makeNodeComponent("cell35"),
    box23: makeNodeComponent("box23"),
    typography45: makeNodeComponent("typography45"),
    body245: makeNodeComponent("body245"),
    typography46: makeNodeComponent("typography46"),
    body246: makeNodeComponent("body246"),
    cell45: makeNodeComponent("cell45"),
    box24: makeNodeComponent("box24"),
    typography47: makeNodeComponent("typography47"),
    body247: makeNodeComponent("body247"),
    typography48: makeNodeComponent("typography48"),
    body248: makeNodeComponent("body248"),
    cell55: makeNodeComponent("cell55"),
    box25: makeNodeComponent("box25"),
    typography49: makeNodeComponent("typography49"),
    body249: makeNodeComponent("body249"),
    typography50: makeNodeComponent("typography50"),
    body250: makeNodeComponent("body250"),
    tableFooter: makeNodeComponent("tableFooter"),
    container: makeNodeComponent("container"),
    rowsPerPage: makeNodeComponent("rowsPerPage"),
    page: makeNodeComponent("page"),
    _110Of100: makeNodeComponent("_110Of100"),
    navigation: makeNodeComponent("navigation"),
    iconButton: makeNodeComponent("iconButton"),
    icon: makeNodeComponent("icon"),
    iconButton2: makeNodeComponent("iconButton2"),
    icon2: makeNodeComponent("icon2"),

    // Metadata about props expected for PlasmicTableFigma
    internalVariantProps: PlasmicTableFigma__VariantProps,
    internalArgProps: PlasmicTableFigma__ArgProps
  }
);

export default PlasmicTableFigma;
/* prettier-ignore-end */
